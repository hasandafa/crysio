[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "crysio"
version = "0.3.1"
description = "Crystal I/O toolkit for preprocessing and visualizing crystal structures for machine learning applications"
readme = "README.md"
license = {text = "MIT"}
keywords = [
    "materials-science", 
    "crystallography", 
    "machine-learning", 
    "crystal-structure", 
    "vasp", 
    "cif", 
    "graph-neural-networks",
    "pytorch-geometric",
    "visualization",
    "materials-project"
]
authors = [
    {name = "Dafa, Abdullah Hasan", email = "dafa.abdullahhasan@gmail.com"}
]
maintainers = [
    {name = "Dafa, Abdullah Hasan", email = "dafa.abdullahhasan@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    # Core scientific computing
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    
    # Visualization
    "matplotlib>=3.5.0",
    "plotly>=5.0.0",
    "seaborn>=0.11.0",
    
    # Network and API
    "requests>=2.25.0",
    "tqdm>=4.62.0",
    
    # Machine Learning / Deep Learning (optional core)
    "torch>=1.9.0",
    "torch-geometric>=2.0.0",
    "networkx>=2.6.0",
    
    # Materials Project API
    "mp-api>=0.33.0",
    
    # Interactive visualization
    "ipywidgets>=7.6.0",
    "py3dmol>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.12",
    "black>=21.0",
    "flake8>=3.9",
    "mypy>=0.910",
    "sphinx>=4.0",
    "sphinx-rtd-theme>=0.5",
    "jupyter>=1.0",
    "notebook>=6.4",
    "jupyterlab>=3.0",
    "pre-commit>=2.15.0",
]
viz = [
    "mayavi>=4.7.0",
    "vtk>=9.0.0",
    "pyvista>=0.32.0",
    "jupyter-threejs>=2.3.0",
]
extra = [
    "ase>=3.22.0",
    "pymatgen>=2023.1.0",
    "spglib>=1.16.0",
    "crystal-toolkit>=2023.1.0",
]

[project.urls]
Homepage = "https://github.com/hasandafa/crysio"
Repository = "https://github.com/hasandafa/crysio.git"
Documentation = "https://hasandafa.github.io/crysio/"
"Bug Tracker" = "https://github.com/hasandafa/crysio/issues"
Changelog = "https://github.com/hasandafa/crysio/blob/master/CHANGELOG.md"

[project.scripts]
crysio = "crysio.cli:main"

[tool.setuptools.packages.find]
include = ["crysio*"]

[tool.setuptools.package-data]
crysio = [
    "data/sample_structures/*",
    "data/atomic_properties/*",
    "visualization/templates/*",
    "tests/data/*",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=crysio",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
    "-v",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "visualization: marks tests requiring display/GUI",
    "api: marks tests requiring API access",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["crysio"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "crysio/cli.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "E266", "E501", "W503", "F403", "F401"]
max-complexity = 18
select = ["B", "C", "E", "F", "W", "T4", "B9"]
exclude = [
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "old",
    "build",
    "dist",
    ".venv",
    ".tox",
]